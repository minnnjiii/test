#include <iostream>
#include <vector>

using namespace std;

int N; //  노드의 개수 (2<=N<=100,000)
vector<int> arr[100001]; // 트리  
int parent[100001]; // 부모 노드  
bool visited[100001]; // visited
	
void recur(int now)
{
	visited[now] = true; // 현재 노드는 방문 처리함  
	for(int i = 0; i < arr[now].size(); i++) // 현재 노드와 연결된 모든 노드 탐색 
	{
		int nxt = arr[now][i]; // 
		if(!visited[nxt]) 
		{
			parent[nxt] = now; // 아직 방문하지 않았다면 현재 노드를 부모로 지정 
			recur(nxt); // 자식 노드로 재귀 호출  
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);
    cin.tie(0);
    
	cin >> N; 
	
	// 입력 받기  
	for(int i=0; i < N-1; i++)
	{
		int a,b;
		cin >> a >> b;
		arr[a].push_back(b);
		arr[b].push_back(a);
	}
	
	recur(1); // 루트 노드는 1이니까 1을 넣어준다   
	
	// 출력  
	for (int i =2; i <= N; i++)
	{
		cout << parent[i] << '\n';
	}
	 
	return 0;
}
